{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "x3",
	"patterns": [
		{
			"include": "#storage"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#tags"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#symbols"
		}
	],
	"repository": {
		"storage": {
			"patterns": [
				{
					"match": "\\b(use)\\b([a-zA-Z\\s]+)((\\.)([a-zA-Z\\s]+))*\\b",
					"captures": {
						"1": {
							"name": "keyword.control.x3"
						},
						"2": {
							"name": "variable.other.constant"
						},
						"4": {
							"name": "keyword.operator.pseudo.x3"
						},
						"5": {
							"name": "variable.other.constant"
						}
					}
				},
				{
					"match": "\\b(proc)\\b([a-zA-Z\\s]+)\\b",
					"captures": {
						"1": {
							"name": "storage.type.function.x3"
						},
						"2": {
							"name": "entity.name.function.x3"
						}
					}
				},
				{
					"match": "\\b(scope)\\b([a-zA-Z\\s]+)\\b",
					"captures": {
						"1": {
							"name": "storage.type.function.x3"
						},
						"2": {
							"name": "entity.name.function.x3"
						}
					}
				},
				{
					"match": "\\b(struct)\\b([a-zA-Z\\s]+)\\b",
					"captures": {
						"1": {
							"name": "storage.type.struct.x3"
						},
						"2": {
							"name": "variable.other.constant.x3"
						}
					}
				},
				{
					"match": "\\b(const)\\b([a-zA-Z\\s]+)\\b",
					"captures": {
						"1": {
							"name": "storage.type.const.x3"
						},
						"2": {
							"name": "variable.other.constant.x3"
						}
					}
				},
				{
					"match": "\\b(var)\\b([a-zA-Z\\s]+)\\b",
					"captures": {
						"1": {
							"name": "storage.type.var.x3"
						},
						"2": {
							"name": "variable.other.readwrite.x3"
						}
					}
				},
				{
					"match": "\\b([a-zA-Z\\s]+)\\(",
					"captures": {
						"1": {
							"name": "entity.name.function.x3"
						},
						"2": {
							"name": "keyword.operator.pseudo.x3"
						}
					}
				}

			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.x3",
					"match": "\\b(module|import|struct|union|proc|scope|return|break|continue|goto|var|const|for|do|while|each|enum|if|else|switch)\\b"
				}
			]
		},
		"tags": {
			"name": "entity.name.type.x3",
			"match": "(\\#[a-zA-Z\\s]+)\\b"
		},
		"symbols": {
			"patterns": [
				{
					"name": "variable.x3",
					"match": "\\b([a-zA-Z\\s]+)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.x3",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.x3",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.hex.x3",
					"match": "(0(x|X)[0-9a-fA-F]+)"
				},
				{
					"name": "constant.numeric.x3",
					"match": "([0-9]+)"
				}
			]
		},
		"comments": {
			"name": "comment.block.x3",
			"begin": "(\\(\\()",
			"end": "(\\)\\))"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.pseudo.x3",
					"match": "(\\(|\\)|\\[|]|\\{|\\}|:|;|\\.)"
				},
				{
					"name": "keyword.operator.assignment.x3",
					"match": "(\\*|=)"
				}
			]
		}
	},
	"scopeName": "source.x3"
}

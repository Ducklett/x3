import "./lib/standard" use standard

enum action {
    idle,
    move[x:int,y:int],
    heal[amount:int],
}

proc print action[action:action] {
    match action {
        idle {
            write line("idle")
        }
        move: m {
            write("move(")
            write number(m.x)
            write(", ")
            write number(m.y)
            write(")\n")
        }
        heal: h {
            write("heal(")
            write number(h.amount)
            write line(")")
        }
    }
}

proc main[] {

    // TODO: add the ability to just do action.idle
    var a = action.idle()
    var b = action.move(10,20)
    var c = action.heal(48)

    println(a)
    println(b)
    println(c)

    print action(a)
    print action(b)
    print action(c)

    // write line("match:")
    // match c {
    //     red     { write line("red") }
    //     green   { write line("green") }
    //     blue    { write line("blue") }
    // }
    // write line("-----")
}

    // TODO: fix foo(color.red,"bob",7) not working unless enum already emitted type info

    // // TODO: make print work with string literals
    // write line("--------")
    // println(839)
    // println(183)
    // println(1)
    // println(0)

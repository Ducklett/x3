proc write(fd:int,msg:~>void,msg_length:int) #syscall(0x001)
proc exit(code:int)                          #syscall(0x03c)

const stdout = 1
const stderr = 2

proc main(args:[]cstring)
{
	if args.length <= 1              show_help()
	if cstr_equal(args[1], "-h")     show_help()
	if cstr_equal(args[1], "--help") show_help()

	each arg,i <- args {
		if i == 0 continue

		var len = strlen(arg)
		write(stdout, arg, len)

		// TODO: make this work without c prefix again
		if i != (args.length-1) {
			write(stdout, c" ", 1)
		} else {
			write(stdout, c"\n", 1)
		}
	}
}

proc show_help() {
	const msg = "
Usage: echo [options] text

Options:
  -h|--Help      get help
"
	write(stderr, msg, msg.length)
	exit(1)
}

proc strlen(c:cstring) -> int {
	var i = 0
	while c[i] != 0 { i++ }
	return i
}

proc cstr_equal(c:cstring,s:string) -> bool {
	var i = 0
	while c[i] != 0 {
		if i >= s.length return false
		if c[i] != s[i]  return false
		i++
	}
	return i == s.length
}
